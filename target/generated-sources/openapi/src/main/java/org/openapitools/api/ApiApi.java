/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Error;
import org.openapitools.model.InterestRate;
import org.openapitools.model.MortgageRequest;
import org.openapitools.model.MortgageResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-06-09T23:01:53.158742+02:00[Europe/Amsterdam]")
@Validated
@Tag(name = "Mortgage", description = "the Mortgage API")
public interface ApiApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/mortgage-check : Check mortgage eligibility
     *
     * @param mortgageRequest  (required)
     * @return Mortgage eligibility result (status code 200)
     *         or Invalid input / validation errors (status code 400)
     *         or Server error / Operation error (status code 500)
     */
    @Operation(
        operationId = "checkMortgage",
        summary = "Check mortgage eligibility",
        tags = { "Mortgage" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Mortgage eligibility result", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MortgageResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid input / validation errors", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "500", description = "Server error / Operation error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/mortgage-check",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<MortgageResponse> checkMortgage(
        @Parameter(name = "MortgageRequest", description = "", required = true) @Valid @RequestBody MortgageRequest mortgageRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"eligible\" : true, \"monthlyCosts\" : 1500 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/interest-rates : Get current interest rates
     *
     * @return List of current interest rates (status code 200)
     *         or Server error / Operation error (status code 500)
     */
    @Operation(
        operationId = "getInterestRates",
        summary = "Get current interest rates",
        tags = { "Rates" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of current interest rates", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = InterestRate.class)))
            }),
            @ApiResponse(responseCode = "500", description = "Server error / Operation error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/interest-rates",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<InterestRate>> getInterestRates(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"interestRate\" : 7.8, \"lastUpdated\" : \"2000-01-23T04:56:07.000+00:00\", \"maturityPeriod\" : 10 }, { \"interestRate\" : 7.8, \"lastUpdated\" : \"2000-01-23T04:56:07.000+00:00\", \"maturityPeriod\" : 10 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
